<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mah="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro">

    <Style x:Key="RadioButtonMenuStyle" TargetType="{x:Type RadioButton}">
        <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.ThemeBackground}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.CheckBox}"/>
        <Setter Property="FocusVisualStyle" Value="{DynamicResource {x:Static SystemParameters.FocusVisualStyleKey}}"/>
        <Setter Property="FontFamily" Value="{DynamicResource MahApps.Fonts.Family.Control}"/>
        <Setter Property="FontSize" Value="{DynamicResource MahApps.Font.Size.Content}"/>
        <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Text}"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Padding" Value="6 0 0 0"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Grid>
                        <Border x:Name="border" Background="{TemplateBinding Background}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="0.3*"/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <TextBlock Grid.Column="0" Text="{TemplateBinding Tag}" FontSize="{TemplateBinding FontSize}" 
                                               FontFamily="../Fonts/#FontAwesome" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                <TextBlock Grid.Column="1" Text="{TemplateBinding Content}" FontSize="{TemplateBinding FontSize}" 
                                               HorizontalAlignment="Left" VerticalAlignment="Center"/>
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" Value="Gray" TargetName="border"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>
    <Style x:Key="ToggleButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Gray10}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Button.Border}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="FontFamily" Value="{DynamicResource MahApps.Fonts.Family.Button}"/>
        <Setter Property="FontSize" Value="{DynamicResource MahApps.Font.Size.Button}"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.ThemeForeground}"/>
        <Setter Property="MinHeight" Value="25"/>
        <Setter Property="Padding" Value="5 6"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="FontFamily" Value="../Fonts/#FontAwesome"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Background="{TemplateBinding Background}" VerticalAlignment="Center">
                        <TextBlock x:Name="textblock" Text="{TemplateBinding Content}"
                                   Foreground="{TemplateBinding Foreground}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="textblock" Property="TextBlock.Text" Value="&#xf061;"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="textblock"  Property="TextBlock.Text" Value="&#xf060;"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>